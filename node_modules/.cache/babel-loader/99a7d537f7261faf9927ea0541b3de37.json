{"ast":null,"code":"import _slicedToArray from \"C:/Users/Raphael/Desktop/Nova pasta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Raphael/Desktop/Nova pasta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Raphael/Desktop/Nova pasta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Raphael/Desktop/Nova pasta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Reference from '../Reference';\n\nvar ReferenceSet = /*#__PURE__*/function () {\n  function ReferenceSet() {\n    _classCallCheck(this, ReferenceSet);\n\n    this.list = new Set();\n    this.refs = new Map();\n  }\n\n  _createClass(ReferenceSet, [{\n    key: \"size\",\n    get: function get() {\n      return this.list.size + this.refs.size;\n    }\n  }, {\n    key: \"describe\",\n    value: function describe() {\n      var description = [];\n\n      var _iterator = _createForOfIteratorHelper(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          description.push(item);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this.refs),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              ref = _step2$value[1];\n\n          description.push(ref.describe());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return description;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return Array.from(this.list).concat(Array.from(this.refs.values()));\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(value) {\n      Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n    }\n  }, {\n    key: \"has\",\n    value: function has(value, resolve) {\n      if (this.list.has(value)) return true;\n      var item,\n          values = this.refs.values();\n\n      while (item = values.next(), !item.done) {\n        if (resolve(item.value) === value) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var next = new ReferenceSet();\n      next.list = new Set(this.list);\n      next.refs = new Map(this.refs);\n      return next;\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(newItems, removeItems) {\n      var next = this.clone();\n      newItems.list.forEach(function (value) {\n        return next.add(value);\n      });\n      newItems.refs.forEach(function (value) {\n        return next.add(value);\n      });\n      removeItems.list.forEach(function (value) {\n        return next.delete(value);\n      });\n      removeItems.refs.forEach(function (value) {\n        return next.delete(value);\n      });\n      return next;\n    }\n  }]);\n\n  return ReferenceSet;\n}();\n\nexport { ReferenceSet as default };","map":{"version":3,"names":["Reference","ReferenceSet","list","Set","refs","Map","size","description","item","push","ref","describe","Array","from","concat","values","value","isRef","set","key","add","delete","resolve","has","next","done","newItems","removeItems","clone","forEach"],"sources":["C:/Users/Raphael/Desktop/Nova pasta/node_modules/yup/es/util/ReferenceSet.js"],"sourcesContent":["import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = new Set();\n    this.refs = new Map();\n  }\n\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n\n  describe() {\n    const description = [];\n\n    for (const item of this.list) description.push(item);\n\n    for (const [, ref] of this.refs) description.push(ref.describe());\n\n    return description;\n  }\n\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n\n  has(value, resolve) {\n    if (this.list.has(value)) return true;\n    let item,\n        values = this.refs.values();\n\n    while (item = values.next(), !item.done) if (resolve(item.value) === value) return true;\n\n    return false;\n  }\n\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}